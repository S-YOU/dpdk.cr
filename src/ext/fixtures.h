#ifndef _PACKET_FIXTURES_H_
#define _PACKET_FIXTURES_H_

#ifdef __cplusplus
extern "C" {
#endif

#include <stdint.h>

static const uint8_t ipv4_gre_ipv4_icmp_data[] = {
        //    0,    1,    2,    3,    4,    5,    6,    7,    8,    9,A(10),B(11),C(12),D(13),E(14),F(15), // 0F
  /* 00 */ 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x45, 0x00, // 0F
  /* 10 */ 0x00, 0x34, 0x00, 0x00, 0x00, 0x00, 0x40, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 1F
  /* 20 */ 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x45, 0x00, 0x00, 0x1c, 0x00, 0x00, 0x00, 0x00, 0x40, 0x01, // 2F
  /* 30 */ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0xf7, 0xff, 0x00, 0x00, // 3F
        //    0,    1,    2,    3,    4,    5,    6,    7,    8,    9,A(10),B(11),C(12),D(13),E(14),F(15), // 0F
  /* 40 */ 0x00, 0x00, // 41
};

static const uint8_t ipv4_opt_gre_ipv4_icmp_data[] = {
        //    0,    1,    2,    3,    4,    5,    6,    7,    8,    9,A(10),B(11),C(12),D(13),E(14),F(15), // 0F
  /* 00 */ 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x48, 0x00, // 0F
  /* 10 */ 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x40, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 1F
  /* 20 */ 0x00, 0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x00, 0x00, // 2F
  /* 30 */ 0x08, 0x00, 0x45, 0x00, 0x00, 0x1c, 0x00, 0x00, 0x00, 0x00, 0x40, 0x01, 0x00, 0x00, 0x00, 0x00, // 3F
        //    0,    1,    2,    3,    4,    5,    6,    7,    8,    9,A(10),B(11),C(12),D(13),E(14),F(15), // 0F
  /* 40 */ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0xf7, 0xff, 0x00, 0x00, 0x00, 0x00, // 4D
};

static const uint8_t ipv4_udp_gtp_ipv4_icmp_data[] = {
        //    0,    1,    2,    3,    4,    5,    6,    7,    8,    9,A(10),B(11),C(12),D(13),E(14),F(15), // 0F
  /* 00 */ 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x45, 0x00, // 0F
  /* 10 */ 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x40, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 1F
  /* 20 */ 0x00, 0x00, 0x08, 0x68, 0x08, 0x68, 0x00, 0x2c, 0x00, 0x00, 0x30, 0xff, 0x00, 0x3c, 0x00, 0x00, // 2F
  /* 30 */ 0x00, 0x00, 0x45, 0x00, 0x00, 0x1c, 0x00, 0x00, 0x00, 0x00, 0x7f, 0x01, 0x00, 0x00, 0x00, 0x00, // 3F
        //    0,    1,    2,    3,    4,    5,    6,    7,    8,    9,A(10),B(11),C(12),D(13),E(14),F(15), // 0F
  /* 40 */ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0xf7, 0xff, 0x00, 0x00, 0x00, 0x00, // 4D
};

static const uint8_t ipv4_gre_ipv6_icmpv6_data[] = {
        //    0,    1,    2,    3,    4,    5,    6,    7,    8,    9,A(10),B(11),C(12),D(13),E(14),F(15), // 0F
  /* 00 */ 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x45, 0x00, // 0F
  /* 10 */ 0x00, 0x48, 0x00, 0x00, 0x00, 0x00, 0x40, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 1F
  /* 20 */ 0x00, 0x00, 0x00, 0x00, 0x86, 0xdd, 0x60, 0x00, 0x00, 0x00, 0x00, 0x08, 0x3a, 0x00, 0x00, 0x00, // 2F
  /* 30 */ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 3F
        //    0,    1,    2,    3,    4,    5,    6,    7,    8,    9,A(10),B(11),C(12),D(13),E(14),F(15), // 0F
  /* 40 */ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, // 4F
  /* 50 */ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 55
};

static const uint8_t ipv6_icmpv6_data[] = {
        //    0,    1,    2,    3,    4,    5,    6,    7,    8,    9,A(10),B(11),C(12),D(13),E(14),F(15), // 0F
  /* 00 */ 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x86, 0xdd, 0x6c, 0x00, // 0F
  /* 10 */ 0x00, 0x00, 0x00, 0x20, 0x3a, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 1F
  /* 20 */ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 2F
  /* 30 */ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 3F
        //    0,    1,    2,    3,    4,    5,    6,    7,    8,    9,A(10),B(11),C(12),D(13),E(14),F(15), // 0F
  /* 40 */ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 4F
  /* 50 */ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 55
};

static const uint8_t arp_data[] = {
        //    0,    1,    2,    3,    4,    5,    6,    7,    8,    9,A(10),B(11),C(12),D(13),E(14),F(15), // 0F
  /* 00 */ 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x06, 0x00, 0x01, // 0F
  /* 10 */ 0x08, 0x00, 0x06, 0x04, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 1F
  /* 20 */ 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, // 29
};

static const uint8_t ipv4_udp_gtp_ipv6_icmpv6_data[] = {
        //    0,    1,    2,    3,    4,    5,    6,    7,    8,    9,A(10),B(11),C(12),D(13),E(14),F(15), // 0F
  /* 00 */ 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x45, 0x00, // 0F
  /* 10 */ 0x00, 0x84, 0x00, 0x00, 0x00, 0x00, 0x40, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 1F
  /* 20 */ 0x00, 0x00, 0x08, 0x68, 0x08, 0x68, 0x00, 0x70, 0x00, 0x00, 0x30, 0xff, 0x00, 0x60, 0x0a, 0x00, // 2F
  /* 30 */ 0x00, 0x00, 0x63, 0x80, 0x00, 0x60, 0x00, 0x38, 0x3a, 0x3f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 3F
        //    0,    1,    2,    3,    4,    5,    6,    7,    8,    9,A(10),B(11),C(12),D(13),E(14),F(15), // 0F
  /* 40 */ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 4F
  /* 50 */ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, // 5F
  /* 60 */ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 6F
  /* 70 */ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 7F
        //    0,    1,    2,    3,    4,    5,    6,    7,    8,    9,A(10),B(11),C(12),D(13),E(14),F(15), // 0F
  /* 80 */ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 8F
  /* 90 */ 0x00, 0x00, // 91
};

static const uint8_t ipv4_icmp_data[] = {
        //    0,    1,    2,    3,    4,    5,    6,    7,    8,    9,A(10),B(11),C(12),D(13),E(14),F(15), // 0F
  /* 00 */ 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x45, 0x00, // 0F
  /* 10 */ 0x00, 0x1c, 0x00, 0x00, 0x00, 0x00, 0x40, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 1F
  /* 20 */ 0x00, 0x00, 0x08, 0x00, 0xf7, 0xff, 0x00, 0x00, 0x00, 0x00, // 29
};

static const uint8_t ipv4_opt_gre_ipv6_icmpv6_data[] = {
        //    0,    1,    2,    3,    4,    5,    6,    7,    8,    9,A(10),B(11),C(12),D(13),E(14),F(15), // 0F
  /* 00 */ 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x48, 0x00, // 0F
  /* 10 */ 0x00, 0x54, 0x00, 0x00, 0x00, 0x00, 0x40, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 1F
  /* 20 */ 0x00, 0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x00, 0x00, // 2F
  /* 30 */ 0x86, 0xdd, 0x60, 0x00, 0x00, 0x00, 0x00, 0x6e, 0x3a, 0x3f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 3F
        //    0,    1,    2,    3,    4,    5,    6,    7,    8,    9,A(10),B(11),C(12),D(13),E(14),F(15), // 0F
  /* 40 */ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 4F
  /* 50 */ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, // 5F
  /* 60 */ 0x00, 0x00, // 61
};

#ifdef __cplusplus
}
#endif
#endif
